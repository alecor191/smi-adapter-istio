// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha3

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRule":       schema_pkg_apis_networking_v1alpha3_DestinationRule(ref),
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleSpec":   schema_pkg_apis_networking_v1alpha3_DestinationRuleSpec(ref),
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleStatus": schema_pkg_apis_networking_v1alpha3_DestinationRuleStatus(ref),
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualService":        schema_pkg_apis_networking_v1alpha3_VirtualService(ref),
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceSpec":    schema_pkg_apis_networking_v1alpha3_VirtualServiceSpec(ref),
		"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceStatus":  schema_pkg_apis_networking_v1alpha3_VirtualServiceStatus(ref),
	}
}

func schema_pkg_apis_networking_v1alpha3_DestinationRule(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DestinationRule is the Schema for the destinationrules API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleSpec", "github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.DestinationRuleStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_networking_v1alpha3_DestinationRuleSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DestinationRuleSpec defines the desired state of DestinationRule",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_networking_v1alpha3_DestinationRuleStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DestinationRuleStatus defines the observed state of DestinationRule",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_networking_v1alpha3_VirtualService(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualService is the Schema for the virtualservices API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceSpec", "github.com/deislabs/smi-adapter-istio/pkg/apis/networking/v1alpha3.VirtualServiceStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_networking_v1alpha3_VirtualServiceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualServiceSpec defines the desired state of VirtualService",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_networking_v1alpha3_VirtualServiceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualServiceStatus defines the observed state of VirtualService",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
